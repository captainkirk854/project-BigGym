use BIGGYM;

-- ----------------------------------------------------------
-- Start test run ..
-- ----------------------------------------------------------
begin;

-- ----------------------------------------------------------
-- Initialise ..
-- ----------------------------------------------------------
set @NUM_TESTS=10;
set @SPROC_NAME='spCreatePerson';

-- ----------------------------------------------------------
-- Set number of tests in this plan ..
-- ----------------------------------------------------------
select tap.plan(@NUM_TESTS);
set @TEST_COMMENT_PREFIX=concat('TESTING [', @SPROC_NAME, '] ');

-- ----------------------------------------------------------
-- Prerequisite operation(s) ..
-- ----------------------------------------------------------

-- ----------------------------------------------------------
-- Run Tests ..
-- ----------------------------------------------------------
set @TEST_COMMENT='Create new person';
set @FirstName='Sylvester';
set @LastName='McCoy';
set @DOB='1943-08-20';
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person name using illegal characters';
set @FirstName='*********';
set @LastName='McCoy';
set @DOB='1943-08-20';
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode < 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person name using partially illegal characters';
set @FirstName='Syl***t*r';
set @LastName='McCoy';
set @DOB='1943-08-20';
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode < 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new Person with same name but different DOB';
set @FirstName='Sylvester';
set @LastName='McCoy';
set @DOB='1843-08-20';
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person with some low SQL-injection';
set @FirstName='Sylvester';
set @LastName='McCoy (OR 1=1)';
set @DOB='1943-08-20';
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person with some mid SQL-injection';
set @FirstName='Sylvester';
set @LastName='McCoy ''(OR 1=1)';
set @DOB='1943-08-20';
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode < 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person with NULLs';
set @FirstName=NULL;
set @LastName=NULL;
set @DOB=NULL;
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode < 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person with bad DOB date format';
set @FirstName='Sylvester';
set @LastName='McCoy';
set @DOB='20-08-1943';
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode < 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person with NULL height and NULL gender';
set @FirstName='Leonard Bones';
set @LastName='McCoy';
set @DOB='1943-08-20';
set @Gender=NULL;
set @Height=NULL;
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new person and then attempt to reset height and gender';
set @FirstName='Hank';
set @LastName='McCoy';
set @DOB='1943-08-20';
set @Gender='M';
set @Height=2.1;
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @Gender='M';
set @Height='1.75';
call spCreatePerson (@FirstName, @LastName, @DOB, @Gender, @Height, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

-- ----------------------------------------------------------
-- Finish tests and clean up.
-- ----------------------------------------------------------
call tap.finish();
rollback;
