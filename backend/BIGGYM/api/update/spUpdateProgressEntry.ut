use BIGGYM;

-- ----------------------------------------------------------
-- Start test run ..
-- ----------------------------------------------------------
begin;

-- ----------------------------------------------------------
-- Initialise ..
-- ----------------------------------------------------------
set @NUM_TESTS=4;
set @SPROC_NAME='spUpdateProgressEntry';

-- ----------------------------------------------------------
-- Set number of tests in this plan ..
-- ----------------------------------------------------------
select tap.plan(@NUM_TESTS);
set @TEST_COMMENT_PREFIX=concat('TESTING [', @SPROC_NAME, '] ');

-- ----------------------------------------------------------
-- Prerequisite operation(s) ..
-- ----------------------------------------------------------
set @exerciseName='A brand new exercise';
set @bodypartName='brand new body part';
call spCreateExercise (@exerciseName, @bodypartName, @exerciseId, @returnCode, @errorCode, @stateCode, @errorMsg);

set @firstname='Sylvester';
set @lastname='McCoy';
set @dob='1943-08-20';
set @gender='M';
set @height=1.75;
call spCreatePerson (@firstname, @lastname, @dob, @gender, @height, @personId, @returnCode, @errorCode, @stateCode, @errorMsg);

set @profileName='The worst doctor and cannot lift weights';
call spCreateProfile (@profileName, @personId, @profileId, @returnCode, @errorCode, @stateCode, @errorMsg);

set @planName='Maximum Power required';
call spCreateTrainingPlan (@planName, @profileId, @planId, @returnCode, @errorCode, @stateCode, @errorMsg);

set @exerciseWeek=1;
set @exerciseDay=1;
set @exerciseOrder=1;
call spCreateTrainingPlanDefinition  (@planId, @exerciseId, @exerciseWeek, @exerciseDay, @exerciseOrder, @planDefinitionId, @returnCode, @errorCode, @stateCode, @errorMsg);

set @SetOrdinality=1;
set @SetReps=10;
set @SetWeight=65.5;
set @SetDatestamp='1995-01-25';
call spCreateProgressEntry (@SetOrdinality, @SetReps, @SetWeight, @SetDatestamp, @planDefinitionId, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);

-- ----------------------------------------------------------
-- Run Tests ..
-- ----------------------------------------------------------
set @TEST_COMMENT='Update existing progress entry with same data';
set @SetOrdinality=1;
set @SetReps=10;
set @SetWeight=65.5;
set @SetDatestamp='1995-01-25';
call spUpdateProgressEntry (@SetOrdinality, @SetReps, @SetWeight, @SetDatestamp, @planDefinitionId, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Update existing progress entry with new data';
set @SetOrdinality=2;
set @SetReps=100;
set @SetWeight=15.5;
set @SetDatestamp='2000-12-14';
call spUpdateProgressEntry (@SetOrdinality, @SetReps, @SetWeight, @SetDatestamp, @planDefinitionId, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Update existing progress entry with bad-format date';
set @SetOrdinality=2;
set @SetReps=100;
set @SetWeight=15.5;
set @SetDatestamp='14-12-2000';
call spUpdateProgressEntry (@SetOrdinality, @SetReps, @SetWeight, @SetDatestamp, @planDefinitionId, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode = -6 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Update progress entry using NULL Id ';
set @ObjectId=NULL;
set @SetOrdinality=1;
set @SetReps=10;
set @SetWeight=65.5;
set @SetDatestamp='25-01-1995';
call spUpdateProgressEntry (@SetOrdinality, @SetReps, @SetWeight, @SetDatestamp, @planDefinitionId, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode = -7 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

-- ----------------------------------------------------------
-- Finish tests and clean up.
-- ----------------------------------------------------------
call tap.finish();
rollback;
