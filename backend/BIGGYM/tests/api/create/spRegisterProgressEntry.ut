use BIGGYM;

-- ----------------------------------------------------------
-- Start test run ..
-- ----------------------------------------------------------
begin;

-- ----------------------------------------------------------
-- Initialise ..
-- ----------------------------------------------------------
set @NUM_TESTS=4;
set @SPROC_NAME='spRegisterProgressEntry';

-- ----------------------------------------------------------
-- Set number of tests in this plan ..
-- ----------------------------------------------------------
select tap.plan(@NUM_TESTS);
set @TEST_COMMENT_PREFIX=concat('TESTING [', @SPROC_NAME, '] ');

-- ----------------------------------------------------------
-- Prerequisite operation(s) ..
-- ----------------------------------------------------------

-- ----------------------------------------------------------
-- Run Tests ..
-- ----------------------------------------------------------
set @TEST_COMMENT='Create new progress entry AND create all references where needed';
set @OperationalMode='CREATE_ALL_REFERENCES_WHERE_NEEDED';
set @SetOrdinality = 3;
set @SetReps = 10;
set @SetWeight = 65.5;
set @DatePhysical = '1974-03-25';
set @ExerciseWeek = 2;
set @ExerciseDay = 1;
set @ExerciseOrdinality = 2;
set @ExerciseName = 'Bicep Barbell Curls';
set @BodyPartName = 'Arms';
set @TrainingPlanName = 'Ultimate Predator-beating training plan';
set @ProfileName = 'Dutch Schaefer';
set @FirstName = 'Arnold Alois';
set @LastName = 'Schwarzenegger';
set @BirthDate = '1947-07-30';
call spRegisterProgressEntry (@OperationalMode, @SetOrdinality, @SetReps, @SetWeight, @DatePhysical, @ExerciseWeek, @ExerciseDay, @ExerciseOrdinality, @ExerciseName, @BodyPartName, @TrainingPlanName, @ProfileName, @FirstName, @LastName, @BirthDate, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new progress entry BUT assume all references exist when they do not';
set @OperationalMode='ASSUME_ALL_REFERENCES_EXIST';
set @SetOrdinality = 4;
set @SetReps = 10;
set @SetWeight = 65.5;
set @DatePhysical = '1974-03-25';
set @ExerciseWeek = 2;
set @ExerciseDay = 1;
set @ExerciseOrdinality = 2;
set @ExerciseName = 'TRICEP PRESS';
set @BodyPartName = 'Arms';
set @TrainingPlanName = 'Ultimate Predator-beating training plan';
set @ProfileName = 'Dutch Schaefer';
set @FirstName = 'Arnold Alois';
set @LastName = 'Schwarzenegger';
set @BirthDate = '1947-07-30';
call spRegisterProgressEntry (@OperationalMode, @SetOrdinality, @SetReps, @SetWeight, @DatePhysical, @ExerciseWeek, @ExerciseDay, @ExerciseOrdinality, @ExerciseName, @BodyPartName, @TrainingPlanName, @ProfileName, @FirstName, @LastName, @BirthDate, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode < 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new progress entry BUT assume all references exist AND THEY DO';
set @OperationalMode='ASSUME_ALL_REFERENCES_EXIST';
set @SetOrdinality = 5;
set @SetReps = 10;
set @SetWeight = 65.5;
set @DatePhysical = '1974-03-25';
set @ExerciseWeek = 2;
set @ExerciseDay = 1;
set @ExerciseOrdinality = 2;
set @ExerciseName = 'Bicep Barbell Curls';
set @BodyPartName = 'Arms';
set @TrainingPlanName = 'Ultimate Predator-beating training plan';
set @ProfileName = 'Dutch Schaefer';
set @FirstName = 'Arnold Alois';
set @LastName = 'Schwarzenegger';
set @BirthDate = '1947-07-30';
call spRegisterProgressEntry (@OperationalMode, @SetOrdinality, @SetReps, @SetWeight, @DatePhysical, @ExerciseWeek, @ExerciseDay, @ExerciseOrdinality, @ExerciseName, @BodyPartName, @TrainingPlanName, @ProfileName, @FirstName, @LastName, @BirthDate, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NOT NULL and @returnCode >= 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

set @TEST_COMMENT='Create new progress entry with bad-format physical date';
set @OperationalMode='CREATE_ALL_REFERENCES_WHERE_NEEDED';
set @SetOrdinality = 6;
set @SetReps = 10;
set @SetWeight = 65.5;
set @DatePhysical='25-01-1995';
set @ExerciseWeek = 2;
set @ExerciseDay = 1;
set @ExerciseOrdinality = 2;
set @ExerciseName = 'Bicep Barbell Curls';
set @BodyPartName = 'Arms';
set @TrainingPlanName = 'Ultimate Predator-beating training plan';
set @ProfileName = 'Dutch Schaefer';
set @FirstName = 'Arnold Alois';
set @LastName = 'Schwarzenegger';
set @BirthDate = '1947-07-30';
call spRegisterProgressEntry (@OperationalMode, @SetOrdinality, @SetReps, @SetWeight, @DatePhysical, @ExerciseWeek, @ExerciseDay, @ExerciseOrdinality, @ExerciseName, @BodyPartName, @TrainingPlanName, @ProfileName, @FirstName, @LastName, @BirthDate, @ObjectId, @returnCode, @errorCode, @stateCode, @errorMsg);
set @CONDITION_PASS=(@ObjectId is NULL and @returnCode < 0 and @errorCode = 0);
select tap.ok(@CONDITION_PASS, concat(@TEST_COMMENT_PREFIX, @TEST_COMMENT));

-- ----------------------------------------------------------
-- Finish tests and clean up.
-- ----------------------------------------------------------
call tap.finish();
rollback;
